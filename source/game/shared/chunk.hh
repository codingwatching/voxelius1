// SPDX-License-Identifier: BSD-2-Clause
#pragma once
#include "shared/const.hh"
#include "shared/voxel.hh"

enum class ChunkType : std::uint16_t {
    Generic     = 0x0000, // Don't make assumptions
    Generated   = 0x0001, // Generated by worldgen
    Inhabited   = 0x0002, // Loaded from a save file
};

using VoxelStorage = std::array<Voxel, CHUNK_VOLUME>;
using LightStorage = std::array<std::int8_t, CHUNK_VOLUME>;

class Chunk final {
public:
    ChunkType type {};
    entt::entity entity {};
    VoxelStorage voxels {};

public:
    static Chunk *create(ChunkType type);
    static Chunk *create(ChunkType type, entt::entity entity);
    static void destroy(Chunk *chunk);
};
